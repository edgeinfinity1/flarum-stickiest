{"version":3,"sources":["webpack://@the-turk/flarum-stickiest/webpack/bootstrap","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['app']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['extend']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['models/Discussion']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['components/Badge']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['components/Button']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['Model']\"","webpack://@the-turk/flarum-stickiest/external \"flarum.core.compat['components/EventPost']\"","webpack://@the-turk/flarum-stickiest/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@the-turk/flarum-stickiest/./src/forum/components/DiscussionSuperStickiedPost.js","webpack://@the-turk/flarum-stickiest/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@the-turk/flarum-stickiest/./src/forum/index.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickyBadge.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickiestBadge.js","webpack://@the-turk/flarum-stickiest/./src/forum/addStickiestControl.js","webpack://@the-turk/flarum-stickiest/./src/forum/addTagStickyControl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","DiscussionSuperStickiedPost","subClass","superClass","constructor","icon","app","forum","attribute","descriptionKey","this","attrs","post","content","stickiest","EventPost","initializers","add","postComponents","discussionSuperStickied","Discussion","isStickiest","Model","isTagSticky","extend","badges","has","remove","isSticky","Badge","component","type","label","translator","trans","DiscussionControls","items","discussion","canSticky","Button","onclick","stickiestAction","save","then","current","matches","DiscussionPage","update","redraw","tagStickyAction"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 9);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/EventPost'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import EventPost from 'flarum/components/EventPost';\n\nexport default class DiscussionSuperStickiedPost extends EventPost {\n  icon() {\n    return app.forum.attribute('stickiest.badge_icon');\n  }\n\n  descriptionKey() {\n    return this.attrs.post.content().stickiest\n      ? 'the-turk-stickiest.forum.post_stream.discussion_super_stickied_text'\n      : 'the-turk-stickiest.forum.post_stream.discussion_common_stickied_text';\n  }\n}\n","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import app from 'flarum/app';\nimport Model from 'flarum/Model';\nimport Discussion from 'flarum/models/Discussion';\n\nimport DiscussionSuperStickiedPost from './components/DiscussionSuperStickiedPost';\nimport addStickyBadge from './addStickyBadge';\nimport addStickiestBadge from './addStickiestBadge';\nimport addStickiestControl from './addStickiestControl';\nimport addTagStickyControl from './addTagStickyControl';\n\napp.initializers.add(\n  'the-turk-stickiest',\n  () => {\n    app.postComponents.discussionSuperStickied = DiscussionSuperStickiedPost;\n\n    Discussion.prototype.isStickiest = Model.attribute('isStickiest');\n    Discussion.prototype.isTagSticky = Model.attribute('isTagSticky');\n\n    addStickyBadge();\n    addStickiestBadge();\n    addStickiestControl();\n    addTagStickyControl();\n  },\n  -1\n);\n","import { extend } from 'flarum/extend';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\n\nexport default function addStickyBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    badges.has('sticky') ? badges.remove('sticky') : '';\n\n    if ((this.isSticky() || this.isTagSticky()) && !this.isStickiest()) {\n      badges.add(\n        'sticky',\n        Badge.component({\n          type: 'sticky',\n          label: this.isTagSticky()\n            ? app.translator.trans('the-turk-stickiest.forum.badge.tag_sticky_tooltip')\n            : app.translator.trans('the-turk-stickiest.forum.badge.sticky_tooltip'),\n          icon: 'fas fa-thumbtack',\n        }),\n        10\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport Discussion from 'flarum/models/Discussion';\nimport Badge from 'flarum/components/Badge';\n\nexport default function addStickiestBadge() {\n  extend(Discussion.prototype, 'badges', function (badges) {\n    if (this.isStickiest()) {\n      badges.add(\n        'stickiest',\n        Badge.component({\n          type: 'stickiest',\n          label: app.translator.trans('the-turk-stickiest.forum.badge.super_sticky_tooltip'),\n          icon: app.forum.attribute('stickiest.badge_icon'),\n        }),\n        10\n      );\n    }\n  });\n}\n","import { extend } from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Button from 'flarum/components/Button';\n\nexport default function addStickiestControl() {\n  extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n    if (discussion.canSticky() && (discussion.isSticky() || discussion.isStickiest())) {\n      items.add(\n        'stickiest',\n        Button.component(\n          {\n            icon: discussion.isStickiest() ? 'fas fa-thumbtack' : app.forum.attribute('stickiest.badge_icon'),\n            onclick: this.stickiestAction.bind(discussion),\n          },\n          app.translator.trans(\n            discussion.isStickiest()\n              ? 'the-turk-stickiest.forum.discussion_controls.common_sticky_button'\n              : 'the-turk-stickiest.forum.discussion_controls.super_sticky_button'\n          )\n        ),\n        -20\n      );\n    }\n\n    if (discussion.isStickiest()) items.remove('sticky');\n  });\n\n  DiscussionControls.stickiestAction = function () {\n    this.save({ isStickiest: !this.isStickiest() }).then(() => {\n      if (app.current.matches(DiscussionPage)) {\n        app.current.get('stream').update();\n      }\n\n      m.redraw();\n    });\n  };\n}\n","import { extend } from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Button from 'flarum/components/Button';\n\nexport default function addTagStickyControl() {\n  extend(DiscussionControls, 'moderationControls', function (items, discussion) {\n    if (discussion.canSticky() && (discussion.isSticky() || discussion.isStickiest())) {\n      items.add(\n        'tag-sticky',\n        Button.component(\n          {\n            icon: 'fas fa-thumbtack',\n            onclick: this.tagStickyAction.bind(discussion),\n          },\n          discussion.isTagSticky()\n            ? app.translator.trans('the-turk-stickiest.forum.discussion_controls.all_sticky_button')\n            : app.translator.trans('the-turk-stickiest.forum.discussion_controls.tag_sticky_button')\n        ),\n        -10\n      );\n    }\n  });\n\n  DiscussionControls.tagStickyAction = function () {\n    this.save({ isTagSticky: !this.isTagSticky() }).then(() => {\n      if (app.current.matches(DiscussionPage)) {\n        app.current.get('stream').update();\n      }\n\n      m.redraw();\n    });\n  };\n}\n"],"sourceRoot":""}